const fs=require("fs");
const path=require("path");

async function s(a){
  return new Promise((resolve,reject)=>{
    fs.stat(a,(err,stat)=> {
      if(err)
        reject(err);
      else
        resolve(stat);
    });
  });
}
async function dir(a){
  return new Promise((resolve,reject)=>{
    fs.readdir(a,(err,data)=>{
      if(err)
        reject(err);
      else
        resolve(data);
    });
  });
}
async function count(a,c){
  if(!a.endsWith('/'))
    a=a.concat('/');
  var file=await dir(a);
  for(var i=0;i<file.length;i++){
    var stat=await s((a+file[i]));
    if(stat.isDirectory()){
      c[0]++;
      c=await count(a+file[i]+'/',c);
    }
    else
      c[1]++;
  }
  return c;
}
          
async function gk(a){
  return new Promise((resolve,reject)=>{
    fs.readdir(a,async(err)=>{
      if(err)
        reject("Error occured while reading directory");
      else{
        var z=[0,0];
        var counts=await count(a,z);
        var obj={countDir:counts[0],countFile:counts[1]};
        resolve(obj);
      }
    });
  });
}
module.exports=gk;
